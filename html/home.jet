<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline:1px solid silver;
            height: 160px;
            padding: 0.5em;
        }
        .github-icon {
            display: inline-block;
            width: 32px; /* Adjust size as needed */
            height: 32px; /* Adjust size as needed */
            background-image: url('https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/github.svg');
            background-size: cover;
            text-indent: -9999px; /* Hide text */
            overflow: hidden;
        }

        /* Optionally, you can add hover effects */
        .github-icon:hover {
            opacity: 0.8;
        }


    </style>
</head>
<body>
<div class="container">

    <div class="row">
        <!-- Home heading -->
        <div class="col">
            <h1 class="mt-3">Home</h1>
        </div>
        <!-- GitHub icon link -->
        <div class="col mt-4">
            <p class="icon" >
                <a href="http://github.com/sameterkanboz" class="github-icon" title="Go to my GitHub page"></a>
            </p>
        </div>
    </div>
    <hr>
<div class="row">
    <div class="col-md-8">
        <h3>Chat</h3>

        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" class="form-control" name="username" id="username" autocomplete="off">
        </div>
        <div class="form-group">
            <label for="message">Message:</label>
            <input type="text" class="form-control" name="message" id="message"  autocomplete="off">
        </div>
        <hr>
        <a href="javascript:void(0)"  class="btn btn-outline-secondary" id="sendBtn">Send Message</a>
        <input type="hidden" name="action"  id="action" >

        <div id="status"  class="mt-2 float-end">

        </div>

        <div  id="output" class="chatbox mt-3">

        </div>
    </div>
    <div class="col-md-4">
        <h3>Who's Online</h3>

        <ul  id="online_users">

        </ul>
    </div>
</div>
</div>
<!--<h1>Home Page</h1>-->
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/static/reconnecting-websocket.min.js"></script>
<script>
    window.onbeforeunload = function(){
        console.log("Closing the connection");
        let jsonData = {};
        jsonData["action"] = "close";
        socket.close();
    }
    let o = document.getElementById('output');
    let socket = null;
    let userField = document.getElementById('username');
    let messageField = document.getElementById('message');
    document.addEventListener('DOMContentLoaded', function () {
        socket = new ReconnectingWebSocket('ws://127.0.0.1:8080/ws',null,{debug: true, reconnectInterval: 3000});
        const offline = `<span class="badge bg-danger">not connected</span>`
        const online = `<span class="badge bg-success">Online</span>`;
        let statusDiv = document.getElementById('status');

        socket.onopen = function () {
            console.log('Connection established');
            statusDiv.innerHTML = online;
        };
        socket.onmessage = msg => {


            let data = JSON.parse(msg.data);
            console.log("Action is: ", data.action);
            switch (data.action){
                case "list_users":
                    let ul = document.getElementById('online_users');
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if(data.connected_users.length>0){
                        data.connected_users.forEach(function(item){
                            let li = document.createElement('li');
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        });
                    }
                    break;
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message +`<br>`;
                    break;
            }
        };
        socket.onclose = function () {
            console.log('Connection closed');
            statusDiv.innerHTML = offline;
        };

        socket.onerror = error => {
            console.log('Error: ' + error);
            statusDiv.innerHTML = offline;
        };


        userField.addEventListener("change",function(){
            let jsonData = {};
            jsonData["action"] = "username"
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        messageField.addEventListener("keydown", function(event){
            if(event.key === "Enter"){
                if (!socket){
                    console.log("Socket is not connected");
                    return false;
                }

                if ((userField.value === "")|| (messageField.value === "")){
                    errorMessage("Please fill the fields");
                    return false;
                } else {
                    sendMessage();
                }
                event.preventDefault();
                event.stopPropagation();

            }
        });

        document.getElementById('sendBtn').addEventListener('click', function(){
           if ((userField.value === "")|| (messageField.value === "")){
               errorMessage("Please fill the fields");
               return false;
           } else {
               sendMessage();
           }
        });
    });

    function sendMessage(){
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData));
        messageField.value = "";
    }
    function  errorMessage(msg){
        notie.alert({
            type: "error", // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
            text: msg,

        })
    }
</script>

</html>